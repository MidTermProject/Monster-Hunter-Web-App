@model MonsterWebApp.Models.UserWeapons

@* We need multiple fields in a form to catch input, then send the inputs as a HTTP POST to the API, we also need to serialize the info for the info getting pushed out.*@

<form method="post">

    @*This will be based off of our Weapons Result Model. When we pass it back to the API, it should translate into their Blade Model.*@
    <label for="Name">Name</label>
    <input maxlength="2" name="Points" />
    <br />
    <label for="Attack">Attack</label>
    <input maxlength="2" name="Points" />
    <br />
    <label for="Sharpness">Sharpness</label>
    <input maxlength="2" name="Points" />
    <br />
    <label for="Rarity">Rarity</label>
    <input maxlength="2" name="Points" />
    <br />
    <label for="Slots">Slots</label>
    <input maxlength="2" name="Points" />
    <br />
    <label for="Description">Description</label>
    <input maxlength="2" name="Points" />
    <br />
    <label for="Element">Element</label>
    <input maxlength="2" name="Points" />
    <br />
    <label for="ElementAttack">Points</label>
    <input maxlength="2" name="Points" />
    <br />
    <label for="Affinity">Affinity</label>
    <input maxlength="2" name="Points" />
    <br />
    <label for="Defense">Defense</label>
    <input maxlength="2" name="Points" />
    <br />
    <label for="FinalForm">Final Form?</label>
    <input maxlength="2" name="Points" />
    <br />
    <label for="ParentBlade">ParentBlade</label>
    <input maxlength="7" name=" Price" />
    <br />
    
    @*We need to link the materials to a quantity, need 2 fields for each material?*@
    <label for="material1">Required Materials</label>
    <input maxlength="2" name="Points" />
    <br />

    <label for="material2">Required Materials</label>
    <input maxlength="2" name="Points" />
    <br />

    @*We also need to add a "add material button, for swords that require more than 2 materials.*@
    <button type="submit">Submit</button>
</form>